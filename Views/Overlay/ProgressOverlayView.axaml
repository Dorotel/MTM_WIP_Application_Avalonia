<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:MTM_WIP_Application_Avalonia.ViewModels.Overlay"
             xmlns:materialIcons="using:Material.Icons.Avalonia"
             xmlns:converters="using:MTM_WIP_Application_Avalonia.Converters"
             mc:Ignorable="d" d:DesignWidth="280" d:DesignHeight="30"
             x:Class="MTM_WIP_Application_Avalonia.Views.Overlay.ProgressOverlayView"
             x:CompileBindings="True" x:DataType="vm:ProgressOverlayViewModel">

  <UserControl.Resources>
    <converters:ColorToBoxShadowConverter x:Key="ColorToBoxShadowConverter"/>
  </UserControl.Resources>

  <UserControl.Styles>
    <!-- Compact Processing Icon with Animation -->
    <Style Selector="materialIcons|MaterialIcon.compact-processing-icon">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.PrimaryAction}" />
      <Setter Property="Width" Value="16" />
      <Setter Property="Height" Value="16" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Style.Animations>
        <Animation Duration="0:0:1.5" IterationCount="Infinite">
          <KeyFrame Cue="0%">
            <Setter Property="RotateTransform.Angle" Value="0" />
          </KeyFrame>
          <KeyFrame Cue="100%">
            <Setter Property="RotateTransform.Angle" Value="360" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>

    <!-- Compact Success Icon -->
    <Style Selector="materialIcons|MaterialIcon.compact-success-icon">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.SuccessBrush}" />
      <Setter Property="Width" Value="16" />
      <Setter Property="Height" Value="16" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Compact Error Icon -->
    <Style Selector="materialIcons|MaterialIcon.compact-error-icon">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.ErrorBrush}" />
      <Setter Property="Width" Value="16" />
      <Setter Property="Height" Value="16" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Compact Progress Text -->
    <Style Selector="TextBlock.compact-progress-text">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.HeadingText}" />
      <Setter Property="FontSize" Value="12" />
      <Setter Property="FontWeight" Value="SemiBold" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="TextTrimming" Value="CharacterEllipsis" />
      <Setter Property="Margin" Value="8,0,0,0" />
    </Style>

    <!-- Compact Ready Text -->
    <Style Selector="TextBlock.compact-ready-text">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.SuccessBrush}" />
      <Setter Property="FontSize" Value="12" />
      <Setter Property="FontWeight" Value="SemiBold" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Margin" Value="8,0,0,0" />
    </Style>

    <!-- Compact Determinate Progress Bar -->
    <Style Selector="ProgressBar.compact-progress-bar">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.ProcessingBrush}" />
      <Setter Property="Background" Value="{DynamicResource MTM_Shared_Logic.BorderLightBrush}" />
      <Setter Property="Height" Value="4" />
      <Setter Property="CornerRadius" Value="2" />
      <Setter Property="Margin" Value="8,0,0,0" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="MinWidth" Value="60" />
      <Setter Property="MaxWidth" Value="100" />
    </Style>

    <!-- Compact Indeterminate Progress Bar -->
    <Style Selector="ProgressBar.compact-indeterminate-progress">
      <Setter Property="Foreground" Value="{DynamicResource MTM_Shared_Logic.ProcessingBrush}" />
      <Setter Property="Background" Value="{DynamicResource MTM_Shared_Logic.BorderLightBrush}" />
      <Setter Property="Height" Value="4" />
      <Setter Property="CornerRadius" Value="2" />
      <Setter Property="IsIndeterminate" Value="True" />
      <Setter Property="Margin" Value="8,0,0,0" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="MinWidth" Value="60" />
      <Setter Property="MaxWidth" Value="100" />
    </Style>
  </UserControl.Styles>

  <!-- Single Root Container - Grid with overlapping content -->
  <Grid MaxWidth="260" MinHeight="20" HorizontalAlignment="Left" VerticalAlignment="Center">

    <!-- Progress State Display (when DataContext exists and IsInProgress=true) -->
    <StackPanel Orientation="Horizontal" Spacing="8"
                IsVisible="{Binding IsInProgress, FallbackValue=False}"
                HorizontalAlignment="Left" VerticalAlignment="Center">

      <!-- Animated Progress Icon -->
      <materialIcons:MaterialIcon
        Kind="{Binding CurrentIconKind, FallbackValue=Sync}"
        Classes.compact-processing-icon="{Binding IsInProgress}"
        Classes.compact-success-icon="{Binding IsCompleted}"
        Classes.compact-error-icon="{Binding HasError}">
        <materialIcons:MaterialIcon.RenderTransform>
          <RotateTransform />
        </materialIcons:MaterialIcon.RenderTransform>
      </materialIcons:MaterialIcon>

      <!-- Progress Title -->
      <TextBlock Text="{Binding Title, FallbackValue=Processing...}"
                 Classes="compact-progress-text"
                 MaxWidth="120" />

      <!-- Determinate Progress Bar (only when showing specific progress) -->
      <ProgressBar Value="{Binding ProgressValue, FallbackValue=0}"
                   Minimum="{Binding ProgressMinimum, FallbackValue=0}"
                   Maximum="{Binding ProgressMaximum, FallbackValue=100}"
                   Classes="compact-progress-bar"
                   IsVisible="{Binding ShowDeterminateProgress, FallbackValue=False}" />

      <!-- Indeterminate Progress Bar (only when showing general progress) -->
      <ProgressBar Classes="compact-indeterminate-progress"
                   IsVisible="{Binding ShowIndeterminateProgress, FallbackValue=False}" />
    </StackPanel>

    <!-- Ready State Display (when not in progress or DataContext is null) -->
    <StackPanel Orientation="Horizontal" Spacing="8"
                IsVisible="{Binding !IsInProgress, FallbackValue=True}"
                HorizontalAlignment="Left" VerticalAlignment="Center">

      <!-- Ready Icon -->
      <materialIcons:MaterialIcon Kind="CheckCircle"
                                 Foreground="{DynamicResource MTM_Shared_Logic.SuccessBrush}"
                                 Width="16" Height="16"
                                 VerticalAlignment="Center" />

      <!-- Ready Text -->
      <TextBlock Text="Ready"
                 Classes="compact-ready-text" />
    </StackPanel>

  </Grid>
</UserControl>
