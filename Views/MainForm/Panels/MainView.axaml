<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:MTM_WIP_Application_Avalonia.ViewModels.MainForm"
             xmlns:views="using:MTM_WIP_Application_Avalonia.Views"
             xmlns:overlayViews="using:MTM_WIP_Application_Avalonia.Views.Overlay"
             xmlns:overlays="using:MTM_WIP_Application_Avalonia.Views.MainForm.Overlays"
             xmlns:panelViews="using:MTM_WIP_Application_Avalonia.Views.MainForm.Panels"
             xmlns:controls="using:MTM_WIP_Application_Avalonia.Controls"
             xmlns:converters="using:MTM_WIP_Application_Avalonia.Converters"
             xmlns:materialIcons="using:Material.Icons.Avalonia"
             mc:Ignorable="d"
             d:DesignWidth="1200"
             d:DesignHeight="700"
             x:Class="MTM_WIP_Application_Avalonia.Views.MainView"
             x:CompileBindings="True"
             x:DataType="vm:MainViewViewModel"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
             VerticalContentAlignment="Stretch"
             HorizontalContentAlignment="Stretch"
             Background="{DynamicResource ThemeV2.Background.Card}">

  <UserControl.Resources>
    <!-- Theme V2 Resources - StyleSystem provides all styling -->
    <ResourceDictionary>
      <converters:ColorToBoxShadowConverter x:Key="ColorToBoxShadowConverter"/>
    </ResourceDictionary>
  </UserControl.Resources>

  <!-- All styling moved to StyleSystem components - no local styles needed -->  <!-- Keyboard shortcuts - PRESERVED -->
  <UserControl.KeyBindings>
    <KeyBinding Gesture="F5" Command="{Binding RefreshCommand}"/>
    <KeyBinding Gesture="Ctrl+S" Command="{Binding OpenSettingsCommand}"/>
    <KeyBinding Gesture="Ctrl+H" Command="{Binding OpenPersonalHistoryCommand}"/>
    <KeyBinding Gesture="Escape" Command="{Binding CancelCommand}"/>
    <!-- Remove tab specific shortcuts -->
    <KeyBinding Gesture="Delete" Command="{Binding RemoveItemViewModel.DeleteCommand}"/>
    <KeyBinding Gesture="Ctrl+Z" Command="{Binding RemoveItemViewModel.UndoCommand}"/>
    <KeyBinding Gesture="Ctrl+P" Command="{Binding RemoveItemViewModel.PrintCommand}"/>
  </UserControl.KeyBindings>

  <!-- Main container using StyleSystem classes -->
  <Grid Classes="MainContainer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    <DockPanel Classes="MainLayout" LastChildFill="True">

    <!-- Header Menu using StyleSystem classes -->
    <Border Classes="HeaderPanel WithShadow" DockPanel.Dock="Top">
      <Grid Classes="HeaderContent" ColumnDefinitions="*,Auto">
        <!-- Left side: Main Menu using StyleSystem -->
        <Menu Classes="MainMenu" Grid.Column="0">
          <MenuItem Header="_File">
            <MenuItem Header="_Settings" Command="{Binding OpenSettingsCommand}"/>
            <Separator/>
            <MenuItem Header="E_xit" Command="{Binding ExitCommand}"/>
          </MenuItem>
          <MenuItem Header="_View">
            <MenuItem Header="_Personal History" Command="{Binding OpenPersonalHistoryCommand}"/>
          </MenuItem>
          <!-- Development builds only -->
          <MenuItem Header="_Help"
                    IsVisible="{Binding ShowDevelopmentMenu, FallbackValue=False}">
            <MenuItem Header="_About" Command="{Binding OpenAboutCommand}"/>
          </MenuItem>
        </Menu>

        <!-- Right side: Theme Quick Switcher -->
        <overlays:ThemeQuickSwitcher x:Name="ThemeQuickSwitcher"
                                     Classes="ThemeSwitcher"
                                     Grid.Column="1"/>
      </Grid>
    </Border>

    <!-- Status Bar using StyleSystem classes -->
    <Border Classes="FooterPanel WithBorder" DockPanel.Dock="Bottom">
      <Grid Classes="FooterContent" ColumnDefinitions="Auto,*,Auto,Auto">

        <!-- Progress Overlay Display -->
        <overlayViews:ProgressOverlayView Classes="ProgressDisplay"
                                         Grid.Column="0"
                                         DataContext="{Binding ProgressOverlayService.CurrentProgressOverlay}" />

        <!-- Spacer -->
        <Border Grid.Column="1" Background="Transparent"/>

        <!-- Status Text Box using StyleSystem -->
        <Border Classes="StatusCard" Grid.Column="2">
          <TextBlock Classes="Caption"
                     Text="{Binding StatusText, FallbackValue='Ready', TargetNullValue='Ready'}"
                     Foreground="{DynamicResource ThemeV2.Content.Primary}"
                     FontWeight="SemiBold"
                     VerticalAlignment="Center"
                     TextTrimming="CharacterEllipsis"
                     ToolTip.Tip="{Binding StatusText}"/>
        </Border>

        <!-- Version Display Badge using StyleSystem -->
        <Border Classes="VersionBadge" Grid.Column="3">
          <TextBlock Classes="Caption"
                     Text="Ver. 5.0"
                     Foreground="{DynamicResource ThemeV2.Content.OnColor}"
                     FontWeight="Bold"
                     VerticalAlignment="Center"/>
        </Border>
      </Grid>
    </Border>

    <!-- Main Content Area using StyleSystem -->
    <Grid Classes="MainContent" Margin="{StaticResource ThemeV2.Spacing.Small}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" MinWidth="400"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>

      <!-- Left Panel: Tab Control -->
      <Grid Grid.Column="0">
        <!-- Main Tab Control using StyleSystem -->
        <Border Classes="Card Elevated TabContainer" ClipToBounds="True">
          <TabControl x:Name="MainForm_TabControl"
                      Classes="MainNavigation"
                      SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay, FallbackValue=0}"
                      SelectionChanged="OnTabSelectionChanged"
                      PointerPressed="OnTabControlPointerPressed">

          <!-- Inventory Tab with StyleSystem classes -->
          <TabItem Classes="PrimaryTab">
            <TabItem.Header>
              <StackPanel Classes="TabHeader">
                <Border Classes="TabIcon Primary">
                  <materialIcons:MaterialIcon Kind="Archive"/>
                </Border>
                <TextBlock Classes="TabTitle" Text="Inventory"/>
              </StackPanel>
            </TabItem.Header>
            <!-- Content container preserving MVVM binding -->
            <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" LastChildFill="True" ClipToBounds="True">
              <ContentControl Content="{Binding InventoryContent}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Stretch"/>
            </DockPanel>
          </TabItem>

          <!-- Remove Tab with StyleSystem classes -->
          <TabItem Classes="WarningTab">
            <TabItem.Header>
              <StackPanel Classes="TabHeader">
                <Border Classes="TabIcon Warning">
                  <materialIcons:MaterialIcon Kind="Delete"/>
                </Border>
                <TextBlock Classes="TabTitle" Text="Remove"/>
              </StackPanel>
            </TabItem.Header>
            <!-- Content container preserving MVVM binding -->
            <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" LastChildFill="True" ClipToBounds="True">
              <ContentControl Content="{Binding RemoveContent}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Stretch"/>
            </DockPanel>
          </TabItem>

          <!-- Transfer Tab with StyleSystem classes -->
          <TabItem Classes="SuccessTab">
            <TabItem.Header>
              <StackPanel Classes="TabHeader">
                <Border Classes="TabIcon Success">
                  <materialIcons:MaterialIcon Kind="SwapHorizontal"/>
                </Border>
                <TextBlock Classes="TabTitle" Text="Transfer"/>
              </StackPanel>
            </TabItem.Header>
            <!-- Content container preserving MVVM binding -->
            <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" LastChildFill="True" ClipToBounds="True">
              <ContentControl Content="{Binding TransferContent}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              VerticalContentAlignment="Stretch"/>
            </DockPanel>
          </TabItem>
        </TabControl>
        </Border>

        <!-- Suggestion Overlay Panel using StyleSystem -->
        <Border x:Name="SuggestionOverlayPanel"
                Classes="OverlayPanel SuggestionOverlay"
                IsVisible="False">
          <!-- Overlay container -->
          <Border Classes="OverlayContent">
            <ContentControl x:Name="SuggestionOverlayContent"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"/>
          </Border>
        </Border>

        <!-- Success Overlay Panel using StyleSystem -->
        <Border x:Name="SuccessOverlayPanel"
                Classes="OverlayPanel SuccessOverlay"
                IsVisible="False">
          <ContentControl x:Name="SuccessOverlayContent"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          HorizontalContentAlignment="Stretch"
                          VerticalContentAlignment="Stretch"/>
        </Border>

        <!-- NewQuickButton Overlay Panel using StyleSystem -->
        <Border x:Name="NewQuickButtonOverlayPanel"
                Classes="OverlayPanel NewQuickButtonOverlay"
                IsVisible="False">
          <views:NewQuickButtonView x:Name="NewQuickButtonView"
                                    DataContext="{x:Null}"/>
        </Border>

      </Grid>

      <!-- Right Panel: Collapsible Quick Actions using StyleSystem -->
      <Grid Grid.Column="1" RowDefinitions="Auto,*">

        <!-- Theme Dropdown Overlay Panel - positioned in right panel -->
        <overlays:ThemeDropdownOverlay x:Name="ThemeDropdownOverlay"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       IsVisible="False"
                                       ZIndex="1000"/>

        <controls:CollapsiblePanel Grid.Row="1"
                                  Margin="8,0"
                                  HeaderPosition="Right"
                                  IsExpanded="{Binding IsQuickActionsPanelExpanded, Mode=TwoWay}"
                                  IsVisible="{Binding IsAdvancedPanelVisible, FallbackValue=True}"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Stretch">
          <views:QuickButtonsView DataContext="{Binding QuickButtonsViewModel}"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"/>
        </controls:CollapsiblePanel>

      </Grid>

    </Grid>
  </DockPanel>

  <!-- SuggestionOverlayView removed for overlay ViewModel reset -->
  </Grid>
</UserControl>
