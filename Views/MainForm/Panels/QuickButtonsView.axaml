<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:MTM_WIP_Application_Avalonia.ViewModels"
             xmlns:materialIcons="using:Material.Icons.Avalonia"
             xmlns:controls="using:MTM_WIP_Application_Avalonia.Controls"
             xmlns:overlay="using:MTM_WIP_Application_Avalonia.Views.Overlay"
             mc:Ignorable="d"
             d:DesignWidth="280"
             d:DesignHeight="720"
             x:Class="MTM_WIP_Application_Avalonia.Views.QuickButtonsView"
             x:CompileBindings="True"
             x:DataType="vm:QuickButtonsViewModel"
             MinWidth="240"
             MinHeight="400">

  <UserControl.Styles>
    <!-- Clean Professional Quick Action Button Styles -->
    <Style Selector="Button.quick-button">
      <Setter Property="Padding" Value="8,6"/>
      <Setter Property="Margin" Value="2,1"/>
      <Setter Property="MinHeight" Value="50"/>
      <Setter Property="Height" Value="50"/>
      <Setter Property="HorizontalAlignment" Value="Stretch"/>
      <Setter Property="VerticalAlignment" Value="Stretch"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="CornerRadius" Value="6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Border.Default}"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="FontWeight" Value="Medium"/>
      <Setter Property="FontSize" Value="12"/>
      <!-- Clean solid background matching app theme -->
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Card}"/>
      <!-- Smooth transitions -->
      <Setter Property="Transitions">
        <Transitions>
          <DoubleTransition Property="Opacity" Duration="0:0:0.15"/>
          <BrushTransition Property="Background" Duration="0:0:0.15"/>
          <BrushTransition Property="BorderBrush" Duration="0:0:0.15"/>
        </Transitions>
      </Setter>
      <!-- Subtle shadow for depth -->
      <Setter Property="Effect">
        <DropShadowEffect Color="#40000000"
                          BlurRadius="4"
                          OffsetX="0"
                          OffsetY="2"
                          Opacity="0.15"/>
      </Setter>
    </Style>

    <!-- Clean hover state matching app theme -->
    <Style Selector="Button.quick-button:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Hover}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="BorderThickness" Value="2"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <!-- Enhanced shadow on hover -->
      <Setter Property="Effect">
        <DropShadowEffect Color="{DynamicResource ThemeV2.Color.Action.Primary}"
                          BlurRadius="8"
                          OffsetX="0"
                          OffsetY="3"
                          Opacity="0.25"/>
      </Setter>
    </Style>

    <!-- Clean pressed state -->
    <Style Selector="Button.quick-button:pressed">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Pressed}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="BorderThickness" Value="2"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <!-- Subtle inset shadow -->
      <Setter Property="Effect">
        <DropShadowEffect Color="#60000000"
                          BlurRadius="2"
                          OffsetX="0"
                          OffsetY="1"
                          Opacity="0.3"/>
      </Setter>
    </Style>

    <!-- Clean position indicator -->
    <Style Selector="Border.position-indicator">
      <Setter Property="CornerRadius" Value="4"/>
      <Setter Property="Width" Value="24"/>
      <Setter Property="Height" Value="24"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="ClipToBounds" Value="True"/>
    </Style>

    <Style Selector="Border.position-indicator:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Action.Secondary}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Secondary}"/>
    </Style>

    <!-- Clean typography styles -->
    <Style Selector="TextBlock.primary-text">
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="FontSize" Value="13"/>
      <Setter Property="FontFamily" Value="Segoe UI, Arial, sans-serif"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
      <Setter Property="TextWrapping" Value="NoWrap"/>
      <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style Selector="TextBlock.secondary-text">
      <Setter Property="FontSize" Value="9"/>
      <Setter Property="FontWeight" Value="Medium"/>
      <Setter Property="FontFamily" Value="Segoe UI, Arial, sans-serif"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Secondary}"/>
      <Setter Property="TextWrapping" Value="NoWrap"/>
      <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style Selector="TextBlock.operation-text">
      <Setter Property="FontSize" Value="11"/>
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="FontFamily" Value="Segoe UI, Arial, sans-serif"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="TextAlignment" Value="Center"/>
      <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>

    <!-- Manufacturing-Grade Professional Header Panel -->
    <Style Selector="Border.header-panel">
      <Setter Property="CornerRadius" Value="12,12,0,0"/>
      <Setter Property="BorderThickness" Value="0,0,0,2"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary.Light}"/>
      <!-- Professional Header Gradient -->
      <Setter Property="Background">
        <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
          <GradientStop Offset="0" Color="{DynamicResource ThemeV2.Color.Action.Primary.Light}"/>
          <GradientStop Offset="0.4" Color="{DynamicResource ThemeV2.Color.Action.Primary}"/>
          <GradientStop Offset="1" Color="{DynamicResource ThemeV2.Color.Action.Primary.Dark}"/>
        </LinearGradientBrush>
      </Setter>
    </Style>

    <!-- Manufacturing-Grade Professional Footer Panel -->
    <Style Selector="Border.footer-panel">
      <Setter Property="CornerRadius" Value="0,0,12,12"/>
      <Setter Property="BorderThickness" Value="0,2,0,0"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary.Light}"/>
      <!-- Professional Footer Gradient -->
      <Setter Property="Background">
        <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
          <GradientStop Offset="0" Color="{DynamicResource ThemeV2.Color.Action.Primary.Dark}"/>
          <GradientStop Offset="0.6" Color="{DynamicResource ThemeV2.Color.Action.Primary}"/>
          <GradientStop Offset="1" Color="{DynamicResource ThemeV2.Color.Action.Primary.Light}"/>
        </LinearGradientBrush>
      </Setter>
    </Style>

    <Style Selector="Border.header-panel:pointerover, Border.footer-panel:pointerover">
      <Setter Property="Background">
        <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
          <GradientStop Offset="0" Color="{DynamicResource ThemeV2.Color.Action.Secondary.Light}"/>
          <GradientStop Offset="0.5" Color="{DynamicResource ThemeV2.Color.Action.Secondary}"/>
          <GradientStop Offset="1" Color="{DynamicResource ThemeV2.Color.Action.Secondary.Dark}"/>
        </LinearGradientBrush>
      </Setter>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Secondary}"/>
    </Style>

    <!-- Enhanced Context Menu Styling -->
    <Style Selector="ContextMenu">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Card}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Border.Default}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="CornerRadius" Value="6"/>
    </Style>

    <Style Selector="MenuItem">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
      <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style Selector="MenuItem:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Compact Header Toggle Button Styles -->
    <Style Selector="Button.header-toggle-button">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Border.Default}"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="CornerRadius" Value="4"/>
      <Setter Property="Padding" Value="4,3"/>
      <Setter Property="Margin" Value="1"/>
      <Setter Property="FontSize" Value="10"/>
      <Setter Property="FontWeight" Value="Medium"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Enhanced hover state for header toggle buttons -->
    <Style Selector="Button.header-toggle-button:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Card}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
      <Setter Property="BorderThickness" Value="3"/>
    </Style>

    <!-- Active state for header toggle buttons -->
    <Style Selector="Button.header-toggle-button.active">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Card}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="BorderThickness" Value="3"/>
    </Style>

    <!-- Icon styling for header toggle buttons -->
    <Style Selector="Button.header-toggle-button materialIcons|MaterialIcon">
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style Selector="Button.header-toggle-button:pointerover materialIcons|MaterialIcon">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
    </Style>

    <Style Selector="Button.header-toggle-button.active materialIcons|MaterialIcon">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
    </Style>

    <!-- Text styling for header toggle buttons -->
    <Style Selector="Button.header-toggle-button TextBlock">
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style Selector="Button.header-toggle-button:pointerover TextBlock">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Content.Primary}"/>
    </Style>

    <Style Selector="Button.header-toggle-button.active TextBlock">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
    </Style>

    <!-- Responsive Footer Toggle Button Styles -->
    <Style Selector="Button.toggle-button">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="CornerRadius" Value="3"/>
      <Setter Property="Padding" Value="4,3"/>
      <Setter Property="Margin" Value="1,0"/>
      <Setter Property="FontWeight" Value="Medium"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style Selector="Button.toggle-button:pointerover">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Card}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style Selector="Button.toggle-button.active">
      <Setter Property="Background" Value="{DynamicResource ThemeV2.Background.Card}"/>
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
      <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <!-- Icon styling for toggle buttons -->
    <Style Selector="Button.toggle-button materialIcons|MaterialIcon">
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style Selector="Button.toggle-button:pointerover materialIcons|MaterialIcon">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
    </Style>

    <Style Selector="Button.toggle-button.active materialIcons|MaterialIcon">
      <Setter Property="Foreground" Value="{DynamicResource ThemeV2.Action.Primary}"/>
    </Style>
  </UserControl.Styles>

  <!-- Manufacturing-Grade Professional Main Container -->
  <Border Background="{DynamicResource ThemeV2.Background.Card}"
          BorderBrush="{DynamicResource ThemeV2.Border.Strong}"
          BorderThickness="2"
          CornerRadius="12"
          Margin="4"
          Padding="0"
          ClipToBounds="False">
    <Border.Effect>
      <DropShadowEffect Color="{DynamicResource ThemeV2.Color.Gray.600}"
                        BlurRadius="16"
                        OffsetX="0"
                        OffsetY="8"
                        Opacity="0.25"/>
    </Border.Effect>
    <Grid x:Name="MainContentGrid" RowDefinitions="Auto,*,Auto" Background="Transparent" Margin="0">
      <!-- Manufacturing-Grade Professional Header with Toggle Buttons -->
      <Border Grid.Row="0"
              Classes="header-panel"
              Padding="{Binding StandardPadding}"
              MinHeight="{Binding StandardControlHeight}"
              Margin="0,0,0,6">
        <Border.Effect>
          <DropShadowEffect Color="{DynamicResource ThemeV2.Color.Action.Primary}"
                            BlurRadius="10"
                            OffsetX="0"
                            OffsetY="4"
                            Opacity="0.3"/>
        </Border.Effect>
        <Grid ColumnDefinitions="*,Auto,*">
          <!-- Left: Quick Actions Button -->
          <Button Grid.Column="0"
                  Classes="header-toggle-button"
                  Classes.active="{Binding !IsShowingHistory}"
                  Command="{Binding ShowQuickActionsCommand}"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  ToolTip.Tip="Show Quick Actions">
            <StackPanel Orientation="Horizontal" Spacing="3">
              <materialIcons:MaterialIcon Kind="Flash" Width="10" Height="10"/>
              <TextBlock Text="Quick Actions"
                         FontSize="10"
                         FontWeight="Medium"
                         TextTrimming="CharacterEllipsis"/>
            </StackPanel>
          </Button>

          <!-- Right: Transaction History Button -->
          <Button Grid.Column="2"
                  Classes="header-toggle-button"
                  Classes.active="{Binding IsShowingHistory}"
                  Command="{Binding ShowHistoryCommand}"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  ToolTip.Tip="Show Transaction History">
            <StackPanel Orientation="Horizontal" Spacing="3">
              <materialIcons:MaterialIcon Kind="ClockOutline" Width="10" Height="10"/>
              <TextBlock Text="History"
                         FontSize="10"
                         FontWeight="Medium"
                         TextTrimming="CharacterEllipsis"/>
            </StackPanel>
          </Button>
        </Grid>
      </Border>

      <!-- Dynamic Content Area -->
      <Grid Grid.Row="1" Background="Transparent">

        <!-- Quick Actions Panel -->

          <!-- Manufacturing-Grade Professional Quick Actions Grid with Fixed 10 Rows -->
          <Border Padding="6" Background="Transparent" IsVisible="{Binding !IsShowingHistory}">
            <ItemsControl ItemsSource="{Binding NonEmptyQuickButtons}">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <UniformGrid Rows="10" Columns="1"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate DataType="vm:QuickButtonItemViewModel">
                  <Button Classes="quick-button"
                          Command="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).ExecuteQuickActionCommand}"
                          CommandParameter="{Binding}"
                          ToolTip.Tip="{Binding ToolTipText}"
                          MinHeight="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).ManufacturingTouchTargetSize}">
                  <Button.ContextMenu>
                    <ContextMenu>
                      <MenuItem Header="🗑️ Remove Button"
                                Click="OnRemoveButtonClick"
                                ToolTip.Tip="Delete this quick action"/>
                      <Separator/>
                      <MenuItem Header="↑ Move Up"
                                Command="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).MoveButtonUpCommand}"
                                CommandParameter="{Binding}"
                                ToolTip.Tip="Move button up in order"/>
                      <MenuItem Header="↓ Move Down"
                                Command="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).MoveButtonDownCommand}"
                                CommandParameter="{Binding}"
                                ToolTip.Tip="Move button down in order"/>
                      <Separator/>
                      <MenuItem Header="🔄 Refresh Buttons"
                                Command="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).RefreshButtonsCommand}"
                                ToolTip.Tip="Reload quick actions from database"/>
                      <MenuItem Header="🧹 Clear All Buttons"
                                Command="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).ClearAllButtonsCommand}"
                                ToolTip.Tip="Remove all quick actions"/>
                      <MenuItem Header="↕️ Reset Order"
                                Command="{Binding $parent[UserControl].((vm:QuickButtonsViewModel)DataContext).ResetOrderCommand}"
                                ToolTip.Tip="Restore default button order"/>
                    </ContextMenu>
                  </Button.ContextMenu>
                    <!-- Clean compact button content layout -->
                    <Grid ColumnDefinitions="Auto,8,*,Auto,Auto"
                          Height="38"
                          Margin="2">

                      <!-- Position indicator -->
                      <Border Grid.Column="0"
                              Classes="position-indicator"
                              Margin="0,0,0,0">
                        <TextBlock Text="{Binding Position}"
                                   Classes="operation-text"
                                   FontSize="11"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                      </Border>

                      <!-- Part ID and details -->
                      <StackPanel Grid.Column="2"
                                  VerticalAlignment="Center"
                                  Spacing="1">
                        <TextBlock Text="{Binding DisplayText}"
                                   Classes="primary-text"
                                   FontSize="13"
                                   FontWeight="SemiBold"
                                   TextTrimming="CharacterEllipsis"
                                   MaxWidth="100"/>
                        <TextBlock Text="{Binding SubText}"
                                   Classes="secondary-text"
                                   FontSize="9"
                                   TextTrimming="CharacterEllipsis"
                                   MaxWidth="100"
                                   Opacity="0.7"/>
                      </StackPanel>

                      <!-- Quantity badge -->
                      <Border Grid.Column="3"
                              CornerRadius="3"
                              Padding="6,2"
                              VerticalAlignment="Center"
                              Margin="4,0"
                              BorderThickness="1"
                              BorderBrush="{DynamicResource ThemeV2.Border.Default}"
                              Background="{DynamicResource ThemeV2.Background.Secondary}"
                              ClipToBounds="True">
                        <StackPanel Spacing="0" HorizontalAlignment="Center">
                          <TextBlock Text="QTY"
                                     FontSize="7"
                                     FontWeight="Medium"
                                     Foreground="{DynamicResource ThemeV2.Content.Secondary}"
                                     TextAlignment="Center"/>
                          <TextBlock Text="{Binding Quantity}"
                                     FontSize="11"
                                     FontWeight="Bold"
                                     Foreground="{DynamicResource ThemeV2.Content.Primary}"
                                     TextAlignment="Center"/>
                        </StackPanel>
                      </Border>

                      <!-- Operation badge -->
                      <Border Grid.Column="4"
                              CornerRadius="3"
                              Padding="6,2"
                              VerticalAlignment="Center"
                              BorderThickness="1"
                              BorderBrush="{DynamicResource ThemeV2.Action.Primary}"
                              Background="{DynamicResource ThemeV2.Action.Primary}"
                              ClipToBounds="True">
                        <StackPanel Spacing="0" HorizontalAlignment="Center">
                          <TextBlock Text="OP"
                                     FontSize="7"
                                     FontWeight="Medium"
                                     Foreground="White"
                                     TextAlignment="Center"/>
                          <TextBlock Text="{Binding Operation}"
                                     FontSize="11"
                                     FontWeight="Bold"
                                     Foreground="White"
                                     TextAlignment="Center"/>
                        </StackPanel>
                      </Border>
                    </Grid>
                  </Button>
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </Border>

        <!-- Manufacturing-Grade Transaction History Panel -->
        <ScrollViewer IsVisible="{Binding IsShowingHistory}"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Disabled"
                      Background="Transparent"
                      Padding="{Binding StandardPadding}">
          <ScrollViewer.Effect>
            <DropShadowEffect Color="{DynamicResource ThemeV2.Color.Gray.300}"
                              BlurRadius="6"
                              OffsetX="0"
                              OffsetY="2"
                              Opacity="0.2"/>
          </ScrollViewer.Effect>

          <!-- Use ItemsControl with TransactionExpandableButton controls -->
          <ItemsControl ItemsSource="{Binding SessionTransactionHistory}">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical" Spacing="2"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <controls:TransactionExpandableButton
                  PartId="{Binding PartId}"
                  Operation="{Binding Operation}"
                  Quantity="{Binding Quantity}"
                  Location="{Binding Location}"
                  User="{Binding User}"
                  TransactionTime="{Binding TransactionTime}"
                  Status="{Binding Status}"
                  ItemType="{Binding ItemType}"
                  TransactionId="{Binding BatchNumber}"
                  Notes="{Binding Notes}"
                  TransactionType="{Binding TransactionType}"/>
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>

        </ScrollViewer>

      </Grid>

      <!-- Manufacturing-Grade Professional Footer Section with QoL Buttons -->
      <Border Grid.Row="2"
              Classes="footer-panel"
              Padding="{Binding StandardPadding}"
              MinHeight="{Binding StandardControlHeight}"
              Margin="0,6,0,0">
        <Border.Effect>
          <DropShadowEffect Color="{DynamicResource ThemeV2.Color.Action.Primary}"
                            BlurRadius="8"
                            OffsetX="0"
                            OffsetY="-3"
                            Opacity="0.3"/>
        </Border.Effect>
        <!-- Responsive QoL Buttons Row -->
        <StackPanel Orientation="Horizontal"
                    Spacing="2"
                    HorizontalAlignment="Center">

          <!-- Responsive New Button -->
          <Button Classes="toggle-button"
                  Command="{Binding NewQuickButtonCommand}"
                  ToolTip.Tip="Create new quick button">
            <materialIcons:MaterialIcon Kind="Plus" Width="12" Height="12"/>
          </Button>

          <!-- Responsive Refresh All Button -->
          <Button Classes="toggle-button"
                  Command="{Binding RefreshButtonsCommand}"
                  ToolTip.Tip="Refresh quick buttons from database">
            <materialIcons:MaterialIcon Kind="Refresh" Width="12" Height="12"/>
          </Button>

          <!-- Responsive Clear All Button -->
          <Button Classes="toggle-button"
                  Command="{Binding ClearAllButtonsCommand}"
                  ToolTip.Tip="Remove all quick actions">
            <materialIcons:MaterialIcon Kind="DeleteSweep" Width="12" Height="12"/>
          </Button>

          <!-- Responsive Reset Order Button -->
          <Button Classes="toggle-button"
                  Command="{Binding ResetOrderCommand}"
                  ToolTip.Tip="Reset button order to default">
            <materialIcons:MaterialIcon Kind="SortAlphabeticalAscending" Width="12" Height="12"/>
          </Button>

          <!-- Responsive Export Settings Button -->
          <Button Classes="toggle-button"
                  Command="{Binding ExportQuickButtonsCommand}"
                  ToolTip.Tip="Export quick buttons configuration">
            <materialIcons:MaterialIcon Kind="Export" Width="12" Height="12"/>
          </Button>

          <!-- Responsive Import Settings Button -->
          <Button Classes="toggle-button"
                  Command="{Binding ImportQuickButtonsCommand}"
                  ToolTip.Tip="Import quick buttons configuration">
            <materialIcons:MaterialIcon Kind="Import" Width="12" Height="12"/>
          </Button>

          <!-- Responsive Help/Info Button -->
          <Button Classes="toggle-button"
                  ToolTip.Tip="Show quick buttons help and keyboard shortcuts">
            <materialIcons:MaterialIcon Kind="HelpCircleOutline" Width="12" Height="12"/>
          </Button>

        </StackPanel>
      </Border>
    </Grid>
  </Border>
</UserControl>
