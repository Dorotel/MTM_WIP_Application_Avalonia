<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Class="MTM.Avalonia.Controls.UniversalCard"
             x:Name="UniversalCardControl">

  <Design.PreviewWith>
    <Border Padding="20" Background="#FAFAFA">
      <StackPanel Spacing="16" Width="300">
        <UserControl Title="Inventory Status" Subtitle="Station A - Operation 100">
          <StackPanel Spacing="8">
            <TextBlock Text="Part ID: MOTOR-001" />
            <TextBlock Text="Quantity: 25" />
            <TextBlock Text="Last Updated: 2 hours ago" Foreground="#605E5C" />
          </StackPanel>
        </UserControl>
        
        <UserControl Title="Production Alert" Subtitle="Low Stock Warning" CardType="Warning" IsActionable="True">
          <StackPanel Spacing="8">
            <TextBlock Text="BEARING-005 is running low" />
            <TextBlock Text="Current: 5 units" />
            <TextBlock Text="Minimum: 10 units" />
          </StackPanel>
        </UserControl>
      </StackPanel>
    </Border>
  </Design.PreviewWith>

  <UserControl.Styles>
    <!-- Base card styles -->
    <Style Selector="Border.card">
      <Setter Property="Background" Value="White" />
      <Setter Property="BorderBrush" Value="#E1DFDD" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="CornerRadius" Value="8" />
      <Setter Property="Padding" Value="16" />
      <Setter Property="BoxShadow" Value="0 2 4 0 #00000010" />
      <Setter Property="Transitions">
        <Transitions>
          <BoxShadowsTransition Property="BoxShadow" Duration="0:0:0.2" />
          <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
        </Transitions>
      </Setter>
    </Style>

    <!-- Hover effects for actionable cards -->
    <Style Selector="Border.card.actionable">
      <Setter Property="Cursor" Value="Hand" />
    </Style>
    <Style Selector="Border.card.actionable:pointerover">
      <Setter Property="BoxShadow" Value="0 4 8 0 #00000015" />
      <Setter Property="RenderTransform" Value="translateY(-1px)" />
    </Style>
    <Style Selector="Border.card.actionable:pressed">
      <Setter Property="RenderTransform" Value="scale(0.98)" />
    </Style>

    <!-- Card type variations -->
    <Style Selector="Border.card.success">
      <Setter Property="BorderBrush" Value="#107C10" />
      <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style Selector="Border.card.warning">
      <Setter Property="BorderBrush" Value="#FFB900" />
      <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style Selector="Border.card.error">
      <Setter Property="BorderBrush" Value="#D13438" />
      <Setter Property="BorderThickness" Value="2" />
    </Style>

    <Style Selector="Border.card.info">
      <Setter Property="BorderBrush" Value="#0078D4" />
      <Setter Property="BorderThickness" Value="2" />
    </Style>

    <!-- Header styles -->
    <Style Selector="TextBlock.card-title">
      <Setter Property="FontSize" Value="16" />
      <Setter Property="FontWeight" Value="SemiBold" />
      <Setter Property="Foreground" Value="#323130" />
      <Setter Property="Margin" Value="0,0,0,4" />
    </Style>

    <Style Selector="TextBlock.card-subtitle">
      <Setter Property="FontSize" Value="14" />
      <Setter Property="Foreground" Value="#605E5C" />
      <Setter Property="Margin" Value="0,0,0,12" />
    </Style>

    <!-- Content area -->
    <Style Selector="ContentPresenter.card-content">
      <Setter Property="Margin" Value="0" />
    </Style>

    <!-- Compact card variant -->
    <Style Selector="Border.card.compact">
      <Setter Property="Padding" Value="12" />
    </Style>

    <!-- Elevated card variant -->
    <Style Selector="Border.card.elevated">
      <Setter Property="BoxShadow" Value="0 4 8 0 #00000018" />
    </Style>
  </UserControl.Styles>

  <Border x:Name="CardContainer" 
          Classes="card">
    <StackPanel>
      <!-- Header section -->
      <StackPanel IsVisible="{Binding HasHeader, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
        <TextBlock x:Name="TitleText"
                   Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                   Classes="card-title"
                   IsVisible="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
        
        <TextBlock x:Name="SubtitleText"
                   Text="{Binding Subtitle, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                   Classes="card-subtitle"
                   IsVisible="{Binding Subtitle, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
      </StackPanel>

      <!-- Content section -->
      <ContentPresenter x:Name="ContentArea"
                        Classes="card-content"
                        Content="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" />

      <!-- Action section -->
      <StackPanel x:Name="ActionArea"
                  Orientation="Horizontal"
                  HorizontalAlignment="Right"
                  Margin="0,12,0,0"
                  Spacing="8"
                  IsVisible="{Binding HasActions, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
        
        <Button x:Name="SecondaryActionButton"
                Content="{Binding SecondaryActionText, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                Command="{Binding SecondaryActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                Classes="secondary"
                IsVisible="{Binding SecondaryActionText, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
        
        <Button x:Name="PrimaryActionButton"
                Content="{Binding PrimaryActionText, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                Command="{Binding PrimaryActionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                Classes="primary"
                IsVisible="{Binding PrimaryActionText, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
      </StackPanel>
    </StackPanel>
  </Border>

</UserControl>